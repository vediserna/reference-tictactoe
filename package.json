{
  "name": "an-outlandish-mean-app",
  "version": "1.0.0",
  "description": "Base for a simple nodejs server",
  "author": "Védís Erna Eyjólfsdóttir",
  "private": true,
  "main": "run.js",
  "dependencies": {
    "autoprefixer-core": "^3.1.0",
    "bcrypt-nodejs": "0.0.3",
    "body-parser": "^1.8.1",
    "cookie-parser": "^1.3.2",
    "db-migrate": "^0.10.0-beta.20",
    "db-migrate-pg": "^0.1.11",
    "express": "^4.10.4",
    "express-session": "^1.9.2",
    "jade": "^1.7.0",
    "javascript-brunch": ">=1.7.1",
    "jshint-brunch": "^1.7.0",
    "parallelshell": "^2.0.0",
    "pg": "^6.1.0",
    "socket.io": "^1.5.1"
  },
  "devDependencies": {
    "expect.js": "^0.3.1",
    "jasmine": "^2.5.2",
    "jasmine-console-reporter": "^1.2.7",
    "jasmine-reporters": "^2.2.0",
    "should": "^11.1.1",
    "socket.io-client": "^1.6.0"
  },
  "scripts": {
    "startclient": "cd ./client && npm run start",
    "buildclient": "cd ./client && npm run build",
    "clean": "if [ -d ./build ]; then rm -r ./build; fi",
    "start": "export NODE_PATH=. && npm run migratedb-dev && nodemon run.js",
    "createbuild": "[ -d build ] || mkdir build ",
    "build": "./build.sh",
    "test": "export NODE_PATH=. && nodemon ./node_modules/.bin/jasmine JASMINE_CONFIG_PATH=./jasmine.json",
    "unittest": "export NODE_PATH=. && ./node_modules/.bin/jasmine JASMINE_CONFIG_PATH=./jasmine.json",
    "apitest": "export NODE_PATH=. && ./node_modules/.bin/jasmine JASMINE_CONFIG_PATH=./jasmine-apitest.json",
    "loadtest": "export NODE_PATH=. && ./node_modules/.bin/jasmine JASMINE_CONFIG_PATH=./jasmine-loadtest.json",
    "dev": "./node_modules/.bin/parallelshell 'npm run start' 'npm run startclient'",
    "migratedb-prod": "db-migrate --config ./server/database.json --migrations-dir ./server/migrations up -e production",
    "migratedb-dev": "db-migrate --config ./server/database.json --migrations-dir ./server/migrations up -e development",
    "startdockerdb": "docker run -p 5432:5432 --name pg2 -e POSTGRES_PASSWORD=mysecretpassword -d postgres",
    "connectdockerdb": "docker run -it --rm --link pg3:postgres postgres psql -h postgres -U postgres"
  }
}
